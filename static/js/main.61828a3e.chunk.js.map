{"version":3,"sources":["components/particles.js","components/NavBar.js","components/Layout.js","components/aboutMe.js","components/Technologies.js","components/Projects.js","App.js","serviceWorker.js","index.js","svg/ReactLogo.svg","svg/NodeJS.svg","assets/images/its-me.JPG","assets/images/coding_tech.jpg","assets/images/project-pics/Logo-blue.png"],"names":["BackgroundParts","particleOptions","particles","number","value","density","value_area","line_linked","enable","move","speed","out_mode","shape","type","image","src","Logo","height","width","NodeJs","color","size","random","anim","size_min","sync","retina_detect","Particles","className","params","NavBar","Navbar","collapseOnSelect","expand","bg","variant","sticky","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Layout","props","Container","children","AboutMe","ProfilePic","alt","Card","Title","Text","CodingTech","Projects","CardGroup","Img","BlueSkies","Body","target","Footer","App","Technologies","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.61828a3e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Particles, { RotateDirection } from 'react-particles-js';\r\nimport Logo from '../svg/ReactLogo.svg';\r\nimport NodeJs from '../svg/NodeJS.svg';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function BackgroundParts() {\r\n  const particleOptions = {\r\n    particles: {\r\n      number: {\r\n        value: 8,\r\n        density: {\r\n          ' enable': true,\r\n          value_area: 800,\r\n        },\r\n      },\r\n      line_linked: {\r\n        enable: false,\r\n      },\r\n      move: {\r\n        speed: 1,\r\n        out_mode: 'out',\r\n      },\r\n      shape: {\r\n        type: ['image'],\r\n        image: [\r\n          {\r\n            src: Logo,\r\n            height: 20,\r\n            width: 23,\r\n          },\r\n          {\r\n            src: NodeJs,\r\n            height: 20,\r\n            width: 20,\r\n          },\r\n          {\r\n            src: '/code.b3b4c4f4.png',\r\n            height: 20,\r\n            width: 20,\r\n          },\r\n        ],\r\n      },\r\n      color: {\r\n        value: '#CCC',\r\n      },\r\n      size: {\r\n        value: 30,\r\n        random: false,\r\n        anim: {\r\n          enable: true,\r\n          speed: 4,\r\n          size_min: 10,\r\n          sync: false,\r\n        },\r\n      },\r\n    },\r\n    retina_detect: false,\r\n  };\r\n  return (\r\n    <div>\r\n      <Particles Particles className='particles' params={particleOptions} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <Navbar collapseOnSelect expand='lg' bg='dark' variant='dark' sticky='top'>\r\n      <Navbar.Brand href='#home'>Welcome!</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\r\n      <Navbar.Collapse id='responsive-navbar-nav'>\r\n        <Nav className='mr-auto' />\r\n        <Nav>\r\n          <Nav.Link href='#About'>About</Nav.Link>\r\n          <Nav.Link href='#Projects'>Projects</Nav.Link>\r\n          <Nav.Link href='#Resume'>Resume</Nav.Link>\r\n          <Nav.Link href='#Contact'>Contact</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nexport default function Layout(props) {\r\n  return <Container>{props.children}</Container>;\r\n}\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap/';\r\nimport ProfilePic from '../assets/images/its-me.JPG';\r\n\r\nexport default function AboutMe() {\r\n  return (\r\n    <div>\r\n      <img src={ProfilePic} alt='headshot' className='profilePic' />\r\n      <Card className='bg-dark text-white cardStyles ' href='#About'>\r\n        {/* <Card.Title className='ml-4'>Hello World, Blake here!</Card.Title> */}\r\n        {/* </Card>\r\n      <Card className='bg-dark text-white cardStyles'> */}\r\n        <Card.Title className='ml-4'>About Me</Card.Title>\r\n        <Card.Text className='ml-2'>\r\n          My name is Blake Thompson, I'm a Certified Full-Stack Developer from\r\n          the University of New Hampshire. Learning new technologies and\r\n          applying functional codes is my passion. In my free time I enjoy\r\n          reading, skating, and running with my dog, Binks. Scroll down to check\r\n          out my journey through my world of Web Development!\r\n        </Card.Text>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap/';\r\nimport CodingTech from '../assets/images/coding_tech.jpg';\r\nexport default function () {\r\n  return (\r\n    <div>\r\n      <Card className='bg-dark text-white cardStyles '>\r\n        <Card.Title className='ml-4'> Technologies Used</Card.Title>\r\n        <img src={CodingTech} alt='Coding Technologies' />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-no-target-blank */\r\nimport React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport BlueSkies from '../assets/images/project-pics/Logo-blue.png';\r\n\r\nexport default function Projects() {\r\n  return (\r\n    <>\r\n      <CardGroup>\r\n        <Card>\r\n          <Card.Img variant='top' src={BlueSkies} />\r\n          <Card.Body>\r\n            <Card.Title>Blue Skies</Card.Title>\r\n            <Card.Text>\r\n              Looking for something to do after Covid? Plan your next outing\r\n              with Blue Skies!\r\n            </Card.Text>\r\n            <a href='https://fleshborne.github.io/Blue-Skies/' target='_blank'>\r\n              Website\r\n            </a>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className='text-muted'>\r\n              <a\r\n                href='https://github.com/fleshborne/Blue-Skies'\r\n                target='_blank'\r\n              >\r\n                Check the Repo!\r\n              </a>\r\n            </small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img\r\n            variant='top'\r\n            src='https://gyazo.com/41a1a31edebe91e6e1deb1b4cf941c45.png/'\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>Portsmouth PickUp Leagues!</Card.Title>\r\n            <Card.Text>\r\n              New to the Portsmouth area? Or enjoy sports that your friends\r\n              don't? Come checkout whats going on in the area, or make your own\r\n              event!{' '}\r\n            </Card.Text>\r\n            <a href='https://thawing-dusk-46621.herokuapp.com/' target='_blank'>\r\n              Website\r\n            </a>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className='text-muted'>\r\n              <a\r\n                href='https://github.com/fleshborne/NH-Pickup-Leagues'\r\n                target='_blank'\r\n              >\r\n                Check the Repo!\r\n              </a>\r\n            </small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img\r\n            variant='top'\r\n            src='https://gyazo.com/4439ed31b09e56e5c8212a5eafd54d3a.gif'\r\n          />\r\n          <Card.Body>\r\n            <Card.Title>PWA Budget Tracker</Card.Title>\r\n            <Card.Text>\r\n              Practicing with PWA technology and IndexDB for offline caching of\r\n              deposits/withdraws.\r\n            </Card.Text>\r\n            <a href='https://lit-plains-19908.herokuapp.com/' target='_blank'>\r\n              Website\r\n            </a>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className='text-muted'>\r\n              <a\r\n                href='https://github.com/fleshborne/PWA-Budget-Tracker'\r\n                target='_blank'\r\n              >\r\n                Check the Repo!\r\n              </a>\r\n            </small>\r\n          </Card.Footer>\r\n        </Card>\r\n      </CardGroup>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport BackgroundParts from './components/particles';\nimport NavBar from './components/NavBar';\nimport Layout from './components/Layout';\nimport AboutMe from './components/aboutMe';\nimport Technologies from './components/Technologies';\nimport Projects from './components/Projects';\n\nexport default function App() {\n  return (\n    <div>\n      <BackgroundParts />\n      <NavBar />\n      <Layout>\n        <AboutMe />\n      </Layout>\n      <Layout>\n        <Technologies />\n      </Layout>\n      <Layout>\n        <Projects />\n      </Layout>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ReactLogo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/NodeJS.c64a9ea5.svg\";","module.exports = __webpack_public_path__ + \"static/media/its-me.0663e3d8.JPG\";","module.exports = __webpack_public_path__ + \"static/media/coding_tech.f0c2faaf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Logo-blue.673d87e3.png\";"],"sourceRoot":""}